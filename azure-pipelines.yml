trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'
  name: 'Default'

variables:
  buildConfiguration: 'Release'
  apiProject: 'api/api.csproj'
  functionProject: 'function/ProcessFileFunction/ProcessFileFunction.csproj'
  artifactName: 'drop'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet restore
      displayName: 'Restore NuGet packages'


    - script: dotnet build $(functionProject) --configuration $(buildConfiguration) --no-restore
      displayName: 'Build Azure Function'

    - script: dotnet test --no-build --verbosity normal
      displayName: 'Run Tests'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Azure Function'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(functionProject)'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/function'
        zipAfterPublish: true

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: $(artifactName)

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  jobs:

  - deployment: DeployFunction
    displayName: 'Deploy Azure Function'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: $(artifactName)
          - task: AzureFunctionApp@2
            displayName: 'Deploy Azure Function'
            inputs:
              azureSubscription: 'c0d515eb-caa1-4e41-a241-4873efbc2b59'
              appType: 'functionApp'
              appName: 'empmgmt-func-app'
              package: '$(Pipeline.Workspace)/$(artifactName)/function/*.zip'